<?php

/**
 * @file
 * islandora_paged_content_navigator.module
 *
 *
 *  Copyright 2017-2018 Leiden University Library
 *
 *  This file is part of islandora_paged_content_navigator.
 *
 *  islandora_paged_content_navigator is free software: you can redistribute it
 *  and/or modify it under the terms of the GNU General Public License as
 *  published by the Free Software Foundation, either version 3 of the License,
 *  or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * Implements hook_block_info().
 */
function islandora_paged_content_navigator_block_info() {

  $blocks['paged_content_navigator'] = array(
    'info' => t('Paged Content Navigator'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function islandora_paged_content_navigator_theme() {
  $path = drupal_get_path('module', 'islandora_paged_content_navigator');

  return array(
    'islandora_paged_content_navigation_block' => array(
      'path' => $path . '/theme',
      'file' => 'theme.inc',
      'template' => 'islandora-paged-content-navigation-block',
      'variables' => array(
        'return_link' => NULL,
        'prev_link' => NULL,
        'next_link' => NULL,
        'prev_text' => NULL,
        'return_text' => NULL,
        'next_text' => NULL,
      ),
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function islandora_paged_content_navigator_block_view($delta = '') {
  // If there is no object there are no blocks.
  $object = menu_get_object('islandora_object', 2);
  if (!$object) {
    return FALSE;
  }

  // Object is a page and has a parent.
  if (count($object->relationships->get(ISLANDORA_RELS_EXT_URI, 'isPageOf')) === 0) {
    return FALSE;
  }

  // We should be on the "view" callback.
  $menu_item = menu_get_item();
  if ($menu_item['path'] != 'islandora/object/%/view' && $menu_item['path'] != 'islandora/object/%') {
    return FALSE;
  }

  $block = array();
  switch ($delta) {
    case 'paged_content_navigator':
      if (module_load_include('inc', 'islandora_paged_content', 'includes/utilities') !== FALSE) {
        $return_link = NULL;
        $prev_link = NULL;
        $next_link = NULL;

        $results = $object->relationships->get(ISLANDORA_RELS_EXT_URI, 'isPageOf');
        $result = reset($results);
        $parent = $result ? islandora_object_load($result['object']['value']) : FALSE;
        $pages = $parent ? islandora_paged_content_get_pages($parent) : array();
        $pages = array_keys($pages);
        if (empty($pages)) {
          $pages[] = $object->id;
        }
        $index = array_search($object->id, $pages);
        $previous_page = isset($pages[$index - 1]) ? $pages[$index - 1] : NULL;
        $next_page = isset($pages[$index + 1]) ? $pages[$index + 1] : NULL;

        if ($previous_page) {
          $prev_link = url("islandora/object/{$previous_page}", array('absolute' => TRUE));
        }
        if ($parent) {
          $pages = in_array('islandora:newspaperIssueCModel', $parent->models)?'/issue_pages':'/pages';
          $return_link = url("islandora/object/{$parent->id}$pages", array('absolute' => TRUE));
        }
        if ($next_page) {
          $next_link = url("islandora/object/{$next_page}", array('absolute' => TRUE));
        }

        $block['subject'] = NULL;
        $block['content'] = theme('islandora_paged_content_navigation_block', array(
          'return_link' => $return_link,
          'return_text' => t('Return to @item', array('@item' => in_array('islandora:newspaperIssueCModel', $parent->models) ? t('issue') : t('book'))),
          'prev_link' => $prev_link,
          'prev_text' => t('Previous Page'),
          'next_link' => $next_link,
          'next_text' => t('Next Page'),
        ));
      }
      break;
  }

  return $block;
}
